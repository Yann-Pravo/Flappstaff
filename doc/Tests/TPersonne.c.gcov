        -:    0:Source:../src/source/TPersonne.c
        -:    0:Graph:../src/source/TPersonne.gcno
        -:    0:Data:../src/source/TPersonne.gcda
        -:    0:Runs:6
        -:    0:Programs:1
        -:    1:/*
        -:    2: _____ _                 _         __  __ 
        -:    3:|  ___| | __ _ _ __  ___| |_ __ _ / _|/ _|
        -:    4:| |_  | |/ _` | '_ \/ __| __/ _` | |_| |_ 
        -:    5:|  _| | | (_| | |_) \__ \ || (_| |  _|  _|
        -:    6:|_|   |_|\__,_| .__/|___/\__\__,_|_| |_|  
        -:    7:              |_|                         
        -:    8:Flapstaff is a Light And Powerful Social Text Analyser For Facebook
        -:    9:
        -:   10:Coders:
        -:   11:benjamin.crespo.ballester(at)gmail(dot)com
        -:   12:yann.pravo(at)gmail(dot)com
        -:   13:mathieu.triay(at)gmail(dot)com
        -:   14:
        -:   15:Repo: http://bitbucket.org/nagy/flapstaff/
        -:   16:*/
        -:   17:
        -:   18:#include "../headers/TPersonne.h"
        -:   19:#include <string.h>
        -:   20:
        -:   21:/*
        -:   22:*	Création d'une personne à partir des paramètres donnés.
        -:   23:*
        -:   24:*	@param idP, ID de la personne (ex: ID facebook)
        -:   25:*	@param nomP, Nom complet (nom + prénom) de la personne
        -:   26:*	@param freqP, fréquence de connexion de la personne
        -:   27:*	@return une Personne de structure Personne avec les params donnés
        -:   28:*/
        -:   29:struct Personne createPersonne(char* idP, char *nomP, int freqP)
      275:   30:{
        -:   31:	struct Personne p;
      275:   32:	strcpy(p.id, idP);
      275:   33:	strcpy(p.nom, nomP);
      275:   34:	p.freq = freqP;
        -:   35:	
      275:   36:	return p;
        -:   37:}
        -:   38:
        -:   39:/*
        -:   40:*	CASOU
        -:   41:*
        -:   42:*	Affiche les détails de la personne donnée en paramètre
        -:   43:*	
        -:   44:*	@param person, personne de struct Personne
        -:   45:
        -:   46:void displayPersonne(struct Personne person)
        -:   47:{
        -:   48:	printf("Nom : %s, ID : %s, Freq : %d\n", person.nom, person.id, person.freq);
        -:   49:}
        -:   50:*/
        -:   51:
        -:   52:/*
        -:   53:*	Retourne la position d'un ID donné dans un tableau
        -:   54:*	Attention, cette fonction en doit être utilisée que lorsqu'on
        -:   55:*	est certain que l'id se trouve dans le tableau !
        -:   56:*	
        -:   57:*	@param id, id dont on veut la position
        -:   58:*	@param tab, tableau de personne concerné
        -:   59:*	@return la position dans le tableau (entre 0 et taille tab)
        -:   60:*/
        -:   61:int position(char *id, struct Personne *tab)
      169:   62:{
      169:   63:	int i = 0;
        -:   64:	
      732:   65:	while (strcmp(tab[i].id, id) != 0)
        -:   66:	{
      394:   67:		i++;
        -:   68:	}
        -:   69:
      169:   70:	return i;
        -:   71:}	
